const resetPassword = async (req, res) => {
    const email = req.body.email
    const password = req.body.password
    console.log(email)
    console.log(password)
    const hashedPassword = await encrypt.encryptPassword(password)
    try{
        const updateEmployee = await employeeSchema.findOneAndUpdate({email:email},{$set:{password:hashedPassword}})
        res.status(200).json({
            message:"Password updated successfully",
            flag:1,
        })
    }catch(err){
        console.log(err)
        res.status(500).json({
            message:"Error in updating password",
        })
    }
}



///  IsEmail Exist
const isEMployeeExist= async (req, res) => {
    try{
        const email = req.body.email
        const getEmployeByEmail = await employeeSchema.findOne({email:email})
        if(getEmployeByEmail){

            res.status(200).json({
                message:"Employee found",
                flag:1,
                data:getEmployeByEmail
            })
        }else{

            res.status(404).json({
                message:"Employee not found",
                flag:-1
            })
        }
    }catch(err){
        res.status(500).json({
            message:"Error in getting employee by email",
        })
    }
}




router.post("/emp../isEmployeeExist",employeeController.isEMployeeExist)
router.post("/emp.../resetpassword",employeeController.resetPassword)